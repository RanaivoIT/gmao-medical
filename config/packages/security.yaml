security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        in_database_admin:
            entity:
                class: App\Entity\Administrateur
                property: email
        in_database_operator:
            entity:
                class: App\Entity\Operateur
                property: email
        in_database_tech:
            entity:
                class: App\Entity\Technicien
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/administrateur
            provider: in_database_admin
            form_login:
                login_path: administrateur_login 
                check_path: administrateur_login                
                always_use_default_target_path: true
                default_target_path: administrateur_home
            logout:
                path: administrateur_logout
                target: administrateur_login 
        tech:
            pattern: ^/technicien
            provider: in_database_tech
            form_login:
                login_path: technicien_login 
                check_path: technicien_login
                always_use_default_target_path: true
                default_target_path: technicien_home
            logout:
                path: technicien_logout
                target: ttechnicien_login
        user:
            pattern: ^/operateur
            provider: in_database_operator
            form_login:
                login_path: operateur_login 
                check_path: operateur_login
                always_use_default_target_path: true
                default_target_path: operateur_home
            logout:
                path: operateur_logout
                target: operateur_login

        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admnistrateur/login, roles: PUBLIC_ACCESS }
        - { path: ^/admnistrateur, roles: [ROLE_ADMINISTRATEUR] }
        - { path: ^/technicien/login, roles: PUBLIC_ACCESS }
        - { path: ^/technicien, roles: ROLE_TECHNICIEN }
        - { path: ^/operateur/login, roles: PUBLIC_ACCESS }
        - { path: ^/operateur, roles: ROLE_OPERATEUR }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
